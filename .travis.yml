# This script is used by the Travis-CI (continuous integration) testing
# framework to run Simbody's tests with every GitHub push or pull-request.
language: cpp
    
matrix:
  include:
    - os: linux
      compiler: clang
      env: BTYPE=RelWithDebInfo
    - os: linux
      compiler: gcc
      env: BTYPE=Release
    - os: linux
      compiler: clang
      env: BTYPE=Debug
    - os: osx
      compiler: clang
      env: BTYPE=RelWithDebInfo

addons:
  # Dependencies on linux.
  apt:
    sources:
      # For gcc >= 4.9.
      - ubuntu-toolchain-r-test
      # For clang 3.6.
      - llvm-toolchain-precise-3.5
      # For cmake >= 2.8.11.
      - kubuntu-backports
    packages:
      - liblapack-dev
      - freeglut3-dev
      - libxi-dev
      - libxmu-dev
      - g++-4.9
      - clang-3.5
      - cmake

      
before_install:
  ## Ensure that there are no tabs in source code.
  # GREP returns 0 (true) if there are any matches, and
  # we don't want any matches. If there are matches,
  # print a helpful message, and make the test fail by using "false".
  # The GREP command here checks for any tab characters in the the files
  # that match the specified pattern. GREP does not pick up explicit tabs
  # (e.g., literally a \t in a source file).
  # This grep command is invalid on osx.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then if grep --recursive --include={*.cpp,*.c,*.h,*.md,*.yml,*.cmake.*.xml,*.html,*.in,*.txt} -P "\t" . ; then echo "Tabs found in the lines shown above. See CONTRIBUTING.md about tabs."; false; else echo "Repo passed no-tabs check."; fi; else echo "No-tabs check not performed."; fi

  # Set compiler versions to use.
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$CXX" = "g++" ]]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
  - if [[ "$TRAVIS_OS_NAME" = "linux" && "$CXX" = "clang++" ]]; then export CXX="clang++-3.5" CC="clang-3.5"; fi

install:
  - mkdir ~/simbody-build && cd ~/simbody-build
  # Configure.
  
  - cmake $TRAVIS_BUILD_DIR -DCMAKE_BUILD_TYPE=$BTYPE -DCMAKE_CXX_FLAGS=-Werror -DCMAKE_INSTALL_PREFIX=~/simbody
  # Build.
  - make -j8

script:
  ## Test Simbody.
  - ctest -j8 --output-on-failure

  ## Make sure we can install with no issues.
  - make -j8 install

before_deploy:

  # Zip up the installation using a file name that identifies where
  # the binaries were built.
  - mkdir ~/binstar-packages
  - ZIPNAME=simbody-latest_${TRAVIS_OS_NAME}_${BTYPE}.zip
  - # Zip up simbody relative to the home directory; must change to home dir.
  - cd ~
  - zip --recurse-paths --quiet ~/binstar-packages/$ZIPNAME simbody

  # Paths in the .bintray.json file are relative to the current directory.
  - cd ~

deploy:
  # Uploads to https://bintray.com/chrisdembia/opensim-testing/simbody/view
  #            https://dl.bintray.com/chrisdembia/opensim-testing/
  # See http://docs.travis-ci.com/user/deployment/bintray/ for help.
  provider: bintray
  file: $TRAVIS_BUILD_DIR/doc/.bintray.json
  user: chrisdembia
  skip_cleanup: true
  # API key is encrypted with travis.
  key:
    secure: MOCuM6THnBR82ClEmWFmqVM/GEiNtimz7dMmWUnmgU4gWAU9DBq0OelifQ6XAAhEqZGz0IbVyRo+zDGWRUEC/EIAb9PhTSg6W/XX+zykAQCsIr3BMvOE6v5MXNz/JMFKxZoFmmrL1WR4a4KUOQANr7derYkIZUy/9CnUkJgQGKE=
  on:
    # Upload for both linux and OSX. 
    branch: master
    condition: "$CC = clang"
